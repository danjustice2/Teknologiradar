Dim startRow As Integer
Dim description As String
Dim outputFileName As String
    
Sub ConvertExcelToJSON()

'''''''''''''''' SETTINGS ''''''''''''''''

' Hvilken række starter teknologierne ved?
 startRow = 5

' Hvad skal filen hedde?
outputFileName = "technologies.json"
























'''''''''''''''' SETTINGS END - PROCEED WITH CAUTION UNLESS YOU KNOW WHAT YOU'RE DOING ''''''''''''''''

    Dim jsonOutput As String
    Dim lastRow As Long
    Dim techName As String
    Dim oea As Integer
    Dim tm As Integer
    Dim bu As Integer
    Dim velfaerd As Integer
    Dim ks As Integer
    Dim komstab As Integer
    Dim maturity As Integer
    Dim maxAdminValue As Integer
    Dim desktopPath As String
    Dim outputFilePath As String
    Dim isFirstTech As Boolean
    Dim technologies As String
    Dim response As VbMsgBoxResult
    Dim isFirstDataEntry As Boolean
    
    
    outputFilePath = desktopPath & outputFileName
    
    ' Initialize the JSON output string
    jsonOutput = "{""technologies"": ["
    
    ' Find the last row of data in the 1 worksheet
    lastRow = Sheets(1).Cells(Rows.Count, "B").End(xlUp).row
    
    ' Specify that the current data entry is the first one in the file, so don't start it with a comma.
    isFirstDataEntry = True
    
    ' Loop through each row of data starting from row 9
    For i = startRow To lastRow
        
        techName = Sheets(1).Cells(i, "B").Value
        
        ' Skip the row if the techName is empty
        If techName = "" Then
            GoTo NextI
        End If

        technologies = technologies + vbNewLine + "- " + techName

        ' Read the values of each column for the current row
        oea = Sheets(1).Cells(i, "E").Value
        tm = Sheets(1).Cells(i, "F").Value
        bu = Sheets(1).Cells(i, "G").Value
        velfaerd = Sheets(1).Cells(i, "H").Value
        ks = Sheets(1).Cells(i, "I").Value
        komstab = Sheets(1).Cells(i, "J").Value
        
        description = EscapeJSONString(Sheets(1).Cells(i, "K").Value)

        link = Sheets(1).Cells(i, "L").Value
        
        
        ' Find the maximum value among the administrative categories
        maxAdminValue = WorksheetFunction.Max(oea, tm, bu, velfaerd, ks, komstab)
        
        ' Calculate the maturity value by subtracting 1 from the maximum administrative value
        maturity = maxAdminValue - 1
        
        ' Initialize the JSON object for the current technology
        If isFirstDataEntry = False Then
        ' There needs to be a comma separating each
            jsonOutput = jsonOutput & ","
        End If
        isFirstDataEntry = False
        jsonOutput = jsonOutput & "{""techName"": """ & techName & """, ""x"": 0, ""y"": 0, ""description"": """ & description & """, ""inverted-text"": false, ""administrations"": {"
        
        ' Add the administrative categories to the JSON object
        jsonOutput = jsonOutput & """oea"": " & IIf(oea = maxAdminValue, "true", "false") & ","
        jsonOutput = jsonOutput & """tm"": " & IIf(tm = maxAdminValue, "true", "false") & ","
        jsonOutput = jsonOutput & """bu"": " & IIf(bu = maxAdminValue, "true", "false") & ","
        jsonOutput = jsonOutput & """velfaerd"": " & IIf(velfaerd = maxAdminValue, "true", "false") & ","
        jsonOutput = jsonOutput & """ks"": " & IIf(ks = maxAdminValue, "true", "false") & ","
        jsonOutput = jsonOutput & """komstab"": " & IIf(komstab = maxAdminValue, "true", "false") & "},"
        
        ' Add the link and maturity fields to the JSON object
        jsonOutput = jsonOutput & """link"": """ & link & """, ""maturity"": " & maturity & "}"
NextI:
    Next i
    
    ' Complete the JSON output string
    jsonOutput = jsonOutput & "]}"
    
    response = MsgBox("Følgende teknologier blev fundet. Klar til at generere JSON-fil?" + vbNewLine + technologies, vbYesNo)

    If response = vbYes Then
        Dim stream As Object
        Set stream = CreateObject("ADODB.Stream")
        stream.Type = 2 'Text
        stream.Charset = "utf-8"
        stream.Open
        stream.WriteText jsonOutput
        On Error GoTo SaveToLocal
            desktopPath = Application.ActiveWorkbook.Path + "/"
            outputFilePath = desktopPath & outputFileName
            stream.SaveToFile outputFilePath, 2 'Create or overwrite the file
            GoTo SaveSuccessful
    Else
        Exit Sub
    End If
    
SaveToLocal:
    response = MsgBox("Der var et problem med at gemme i følgende placering:" + vbNewLine + outputFilePath + "." + vbNewLine + "Vil du gemme den på skrivebordet i stedet?", vbYesNo)

    If response = vbYes Then
        On Error GoTo ErrorHandler
            desktopPath = Environ("USERPROFILE") & "\Desktop\"
            outputFilePath = desktopPath & outputFileName
            stream.SaveToFile outputFilePath, 2 'Create or overwrite the file
    Else
        Exit Sub
    End If
    
SaveSuccessful:
        MsgBox "Fil gemt i" & outputFilePath
        stream.Close
        Exit Sub
    
ErrorHandler:
        MsgBox "Kunne ikke gemme filen. Tjek dine adgangstilladelser og prøv igen."
        stream.Close
        Exit Sub
    
End Sub

Function EscapeJSONString(ByVal inputText As String) As String
    Dim escapedText As String
    Dim i As Long
    Dim lastCharacterWasNewLine As Boolean
    lastCharacterWasNewLine = False
    
    escapedText = ""
    
    For i = 1 To Len(inputText)
        Select Case Mid(inputText, i, 1)
            Case "\"
                escapedText = escapedText & "\\"
            Case """"
                escapedText = escapedText & "\" & """"
            Case "/"
                escapedText = escapedText & "\/"
            Case vbBack
                escapedText = escapedText & "\b"
            Case vbFormFeed
                escapedText = escapedText & "\f"
            Case vbNewLine, vbLf, vbCr
                If lastChracterWasNewLine <> True Then
                    escapedText = escapedText & "\n"
                    lastChracterWasNewLine = True
                    GoTo NextChar
                End If
            Case vbTab
                escapedText = escapedText & "\t"
            Case Else
                escapedText = escapedText & Mid(inputText, i, 1)
        End Select
        
        lastCharacterWasNewLine = False
NextChar:
    Next i
    
    EscapeJSONString = escapedText
End Function


